<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="boardMapper">
<!-- 첨부파일 CRUD 쿼리 생성, 우리로직에서는 첨부파일은 수정X -> 입력,삭제 -->
<!-- 왜 수정이 없는가. 저장된 파일을 수정못하고, 기존삭제하고 신규파일을 덮어씌운다. -->
<insert id="insetAttach">
insert into tbl_attach
()
values
()
</insert>

<!-- 게시물CRUD 쿼리 생성 -->
<delete id="deleteBoard">
delete from tbl_board where bno = #{bno}
</delete>
<update id="updateBoard">
update tbl_board set 
board_type = #{board_type}
,title = #{title}
,content = #{content}
,writer = #{writer}
,update_date = systimestamp
where bno = #{bno}
</update>
<!-- 아래 뷰카운터는 게시물 상세보기시 카운트 증가, 영상조회수증가랑 비슷함. -->
<update id="updateViewCount">
update tbl_board set
view_count = nvl(view_count,0) + 1
where bno = #{bno}
</update>
<select id="readBoard" resultType="com.edu.vo.BoardVO">
select * from tbl_board where bno = #{bno}
</select>
<!-- bno필드변수가 자동증가가 되는 기능이 필요 seq.nextVal -->
<insert id="insertBoard">
	<selectKey keyProperty="seq_bno" resultType="int" order="BEFORE">
		select seq_bno.nextval from dual
	</selectKey>
	insert into tbl_board 
	(
	bno, title,content, writer, reg_date, board_type 
	)
	values 
	(
	#{seq_bno},#{title},#{content},#{writer},systimestamp,#{board_type}
	)
</insert>
<!-- 페이징 처리때문에 중첩쿼리로 생성(아래) -->
<select id="selectBoard" resultType="com.edu.vo.BoardVO">
select table_b.* from
(
select rownum as rnum, table_a.* from 
	(
		select * from tbl_board
		<include refid="sqlWhere" />
	) table_a
	<![CDATA[
	where rownum <= (#{queryStartNo}*#{queryperPageNum})+#{queryPerPageNum}
) table_b where rnum > #{queryStartNo}*#{queryperPageNum}
 ]]>
</select>
<!-- 검색처리는 멤버쿼리에서 작성한 내용 붙여넣기 다중게시판용 필드조회조건 추가 PageVO-->
<sql id="sqlWhere">
	WHERE board_type = #{board_type}
	<if test="search_type != '' and search_type != null">
        and (
       	<if test="search_type == 'all'.toString()">
	        title LIKE '%'||#{search_keyword}||'%'
	        OR content LIKE '%'||#{search_keyword}||'%'
        </if>
	    <if test="search_type == 'title'.toString()">
	        title LIKE '%'||#{search_keyword}||'%'
        </if>
	    <if test="search_type == 'content'.toString()">
	        content LIKE '%'||#{search_keyword}||'%'
        </if>
        )
    </if>
</sql>

</mapper>